$include "FVM.lh"
$include "flame.lh"

#include <flame.hh>

namespace flame {

// =============================================================================

$rule pointwise(faceAvgFactor <- (cl,cr)->vol) {
  $faceAvgFactor = 1.0/($cl->$vol + $cr->$vol);
}

$rule pointwise(gagePressure_f <- faceAvgFactor, (cl,cr)->(vol,gagePressure)) {
  $gagePressure_f = $faceAvgFactor*($cl->$vol*$cr->$gagePressure + $cr->$vol*$cl->$gagePressure);
}

$rule pointwise(velocity_f <- faceAvgFactor, (cl,cr)->(vol,velocity)) {
  $velocity_f = $faceAvgFactor*($cl->$vol*$cr->$velocity + $cr->$vol*$cl->$velocity);
}

$rule pointwise(temperature_f <- faceAvgFactor, (cl,cr)->(vol,temperature)) {
  $temperature_f = $faceAvgFactor*($cl->$vol*$cr->$temperature + $cr->$vol*$cl->$temperature);
}

$rule pointwise(speciesY_f <- faceAvgFactor, (cl,cr)->(vol,speciesY), Ns), prelude {
  $speciesY_f.setVecSize(*$Ns);
} {
  for(int i = 0; i < $Ns; ++i) {
    $speciesY_f[i] = $faceAvgFactor*($cl->$vol*$cr->$speciesY[i] + $cr->$vol*$cl->$speciesY[i]);
  }
}

// =============================================================================

$rule pointwise(mixtureW_f, mixtureR_f <- (cl,cr)->vol, speciesY_f, speciesW, Runiv, Ns) {
  double rW = 0.0;
  for(int i = 0; i < $Ns; ++i) {
    rW += $speciesY_f[i]/$speciesW[i];
  }
  $mixtureW_f = 1.0/rW;
  $mixtureR_f = $Runiv*rW;
}

$rule pointwise(mixtureCp_f <- (cl,cr)->vol, speciesY_f, speciesCp_Constant, Ns) {
  double Cp = 0.0;
  for(int i = 0; i < $Ns; ++i) {
    Cp += $speciesY_f[i]*$speciesCp_Constant[i];
  }
  $mixtureCp_f = Cp;
}

$rule pointwise(
  speciesX_f <- (cl,cr)->vol, speciesY_f, mixtureW_f, speciesW, Ns
), prelude {
  $speciesX_f.setVecSize(*$Ns);
} {
  for(int i = 0; i < $Ns; ++i) {
    $speciesX_f[i] = $speciesY_f[i]*$mixtureW_f/$speciesW[i];
  }
}

// =============================================================================

} // end: namespace flame
