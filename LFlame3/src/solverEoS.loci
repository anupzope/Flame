$include "FVM.lh"
$include "flame.lh"

#include <Loci.h>

namespace flame {

// =============================================================================

$rule default(eosType) {
  $eosType = "idealGas";
}

$rule constraint(idealGas <- eosType) {
  $idealGas = EMPTY;
  if($eosType == "idealGas") {
    $idealGas = ~EMPTY;
  } else {
    std::cerr << "Invalid value of eosType: " << $eosType << std::endl;
    Loci::Abort();
  }
}

// =============================================================================

$rule pointwise(density <- temperature, gagePressure, speciesR, Pambient),
constraint(singleSpecies, geom_cells) {
  $density = ($gagePressure+$Pambient)/($speciesR[0]*$temperature);
}

$rule pointwise(density_f <- temperature_f, gagePressure_f, speciesR, Pambient),
constraint(singleSpecies, area) {
  $density_f = ($gagePressure_f+$Pambient)/($speciesR[0]*$temperature_f);
}

$rule pointwise(density <- temperature, gagePressure, mixtureR, Pambient),
constraint(multiSpecies, geom_cells) {
  $density = ($gagePressure+$Pambient)/($mixtureR*$temperature);
}

$rule pointwise(density_f <- temperature_f, gagePressure_f, mixtureR, Pambient),
constraint(multiSpecies, area) {
  $density_f = ($gagePressure_f+$Pambient)/($mixtureR*$temperature_f);
}

// =============================================================================

} // end: namespace flame