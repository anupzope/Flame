$include "FVM.lh"
$include "flame.lh"

#include <Loci.h>

#include <flux.hh>

namespace flame {

// =============================================================================

$rule pointwise(
  ssConvectiveFlux_f <-
  leftv3d(velocity), leftsP(gagePressure,minPg), leftsP(temperature,Zero),
  rightv3d(velocity), rightsP(gagePressure,minPg), rightsP(temperature,Zero),
  area, Pambient, speciesGamma, speciesR
), constraint(singleSpecies, idealGas, (cl,cr)->(vol)) {
  AUSMPlusUpFluxIdealGas(
    $ssConvectiveFlux_f,
    $leftv3d(velocity), $leftsP(gagePressure,minPg), $leftsP(temperature,Zero),
    $rightv3d(velocity), $rightsP(gagePressure,minPg), $rightsP(temperature,Zero),
    $area.sada, $area.n, $Pambient,
    $speciesR[0], $speciesGamma[0], 1.0
  );
}

// =============================================================================

$rule pointwise(
  msConvectiveFlux_f <-
  leftsP(gagePressure,minPg), leftv3d(velocity), leftsP(temperature,Zero),
  leftvM(speciesY),
  rightsP(gagePressure,minPg), rightv3d(velocity), rightsP(temperature,Zero),
  rightvM(speciesY),
  (cl,cr)->(mixtureGamma, mixtureR), area, Pambient, Ns
), constraint(multiSpecies, idealGas, (cl,cr)->(gagePressure,velocity,temperature,speciesY)), prelude {
  $msConvectiveFlux_f.setVecSize(*$Ns+4);
} {
  double * flux = &($msConvectiveFlux_f[0]);
  
  double const * Yl = &($leftvM(speciesY)[0]);
  Loci::vector3d<double> const & Ul = $leftv3d(velocity);
  double const & Pgl = $leftsP(gagePressure,minPg);
  double const & Tl = $leftsP(temperature,Zero);
  double const & gammal = $cl->$mixtureGamma;
  double const & Rtildel = $cl->$mixtureR;
  
  double const * Yr = &($rightvM(speciesY)[0]);
  Loci::vector3d<double> const & Ur = $rightv3d(velocity);
  double const & Pgr = $rightsP(gagePressure,minPg);
  double const & Tr = $rightsP(temperature,Zero);
  double const & gammar = $cr->$mixtureGamma;
  double const & Rtilder = $cr->$mixtureR;
  
  AUSMPlusUpFluxMultiSpeciesIdealGas(
    flux,
    $Ns,
    Yl, Ul, Pgl, Tl, Rtildel, gammal,
    Yr, Ur, Pgr, Tr, Rtilder, gammar,
    $area.sada, $area.n, $Pambient,
    1.0
  );
}

// =============================================================================

} // end: namespace flame